{"version":3,"sources":["components/Table/Row/Row.tsx","components/Table/Table.tsx","hooks/useSortData.ts","hooks/useChildrenSort.ts","App.tsx","index.tsx"],"names":["Cell","styled","td","ChildrenWrapper","div","Row","fingerElem","data","useState","showChildren","setShowChildren","hasChildren","undefined","childElements","length","childrenRows","map","el","id","RowWrapper","onClick","state","name","style","color","fontSize","isActive","toString","balance","email","hidden","tableData","JSON","parse","stringify","tr","Header","th","TableWrapper","table","Table","config","sortConfig","setSortConfig","sortItems","useCallback","a","b","key","order","items","useMemo","sort","setSort","useSortData","parentElements","filter","dataElement","parentId","parentElem","childrenElements","childElem","useChildrenSort","headers","header","rows","App","ReactDOM","render","document","getElementById"],"mappings":"oxHAoCMA,EAAOC,IAAOC,GAAV,mDAIJC,EAAkBF,IAAOG,IAAV,oFAONC,EApCc,SAAvBA,EAAwB,GAAY,IAAD,EAKnCC,EALyBC,EAAU,EAAVA,KAAU,EACCC,oBAAS,GADV,mBAChCC,EADgC,KAClBC,EADkB,KAEjCC,OAAqCC,IAAvBL,EAAKM,eAA+BN,EAAKM,cAAcC,OAAS,EAE9EC,EAAY,UAAGR,EAAKM,qBAAR,aAAG,EAAoBG,KAAI,SAACC,GAAD,OAAQ,cAACZ,EAAD,CAAiBE,KAAMU,GAAbA,EAAGC,OAMnE,OAJKP,IACFL,EAAaG,EAAY,SAAS,UAInC,qCACD,eAACU,EAAD,CAAYC,QAAS,kBAAMV,GAAgB,SAACW,GAAD,OAAYA,MAAvD,UAGI,eAACrB,EAAD,WAAM,iCAASO,EAAKe,OAApB,IAAmC,sBAAMC,MAAO,CAACC,MAAO,QAASC,SAAU,IAAxC,SAA8CnB,OACjF,cAACN,EAAD,UAAOO,EAAKmB,SAASC,aACrB,cAAC3B,EAAD,UAAOO,EAAKqB,UACZ,cAAC5B,EAAD,UAAOO,EAAKsB,WAEhB,cAAC1B,EAAD,CAAiB2B,QAASrB,EAA1B,SAAyCM,Q,gBCxBrCgB,EAA4BC,KAAKC,MAAMD,KAAKE,UAAU3B,IA4D/CY,EAAalB,IAAOkC,GAAV,iJAIjBC,EAASnC,IAAOoC,GAAV,qFAKNC,EAAerC,IAAOsC,MAAV,mZA2BHC,EAtFS,WAKtB,IAL4B,ECHH,SAACT,GAAqG,IAA7DU,EAA4D,uDAA3B,KAA2B,EAwBxFjC,mBAASiC,GAxB+E,mBAwBrHC,EAxBqH,KAwBzGC,EAxByG,KA0BtHC,EAAYC,uBAAY,SAACC,EAAiBC,GAC5C,GAAmB,OAAfL,EAAqB,CACrB,GAAII,EAAEJ,EAAWM,KAAOD,EAAEL,EAAWM,KACjC,MAA4B,cAArBN,EAAWO,MAAwB,GAAK,EAEnD,GAAIH,EAAEJ,EAAWM,KAAOD,EAAEL,EAAWM,KACjC,MAA4B,cAArBN,EAAWO,OAAyB,EAAI,EAGvD,OAAO,IACR,CAACP,IAkBJ,MAAO,CAACQ,MAfgBC,mBAAQ,WAG5B,OAFmB,YAAOpB,GACYqB,KAAKR,KAE5C,CAACb,EAAWa,IAWiBS,QAThB,SAACL,GACb,IAAIC,EAAoB,aACV,OAAVP,QAAU,IAAVA,OAAA,EAAAA,EAAYM,OAAQA,GAA4B,cAArBN,EAAWO,QACtCA,EAAQ,cAEZN,EAAc,CAACK,MAAKC,YDtCDK,CEvBI,SAACvB,GAC9B,IAAMwB,EAAiBxB,EAAUyB,QAAO,SAACC,GAAD,OAA0C,IAAzBA,EAAYC,YAarE,OAX4BP,mBAAQ,WAOlC,OANgBI,EAAevC,KAC7B,SAAC2C,GACC,IAAMC,EAAmB7B,EAAUyB,QAAO,SAACK,GAAD,OAAeA,EAAUH,WAAaC,EAAWzC,MAC3F,OAAO,2BAAKyC,GAAZ,IAAwB9C,cAAe+C,SAK7C,IFOmDE,CAAgB/B,IAI5DmB,EATqB,EASrBA,MAAOG,EATc,EASdA,QAGRU,EADe,CAAC,OAAQ,WAAY,UAAW,SAElD/C,KAAI,SAACgD,GAAD,OAAyB,cAAC5B,EAAD,CAAQhB,QAAS,kBAAMiC,EAAQW,IAA/B,SAAyCA,OAGnEC,EAAOf,EAAMlC,KAAI,SAACT,GAAD,OAAU,cAAC,EAAD,CAAmBA,KAAMA,GAAfA,EAAKW,OAEhD,OACE,eAACoB,EAAD,WAEE,gCACE,cAACnB,EAAD,UACG4C,MAIL,gCACGE,QGjCMC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e89eea3a.chunk.js","sourcesContent":["import React, {CSSProperties, useState} from 'react';\r\nimport {DataInterface, DataInterfaceWithChildren, RowWrapper} from \"../Table\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\ninterface Props {\r\n    data: DataInterfaceWithChildren\r\n    style?: CSSProperties\r\n}\r\n\r\nconst Row: React.FC<Props> = ({data}) => {\r\n  const [showChildren, setShowChildren] = useState(false);\r\n  const hasChildren = data.childElements !== undefined && data.childElements.length > 0;\r\n  debugger;\r\n  const childrenRows = data.childElements?.map((el) => <Row key={el.id} data={el} />);\r\n  let fingerElem;\r\n  if (hasChildren) {\r\n    fingerElem = showChildren ? `⮝` : '⮟';\r\n  }\r\n\r\n return (\r\n   <>\r\n  <RowWrapper onClick={() => setShowChildren((state) => !state)}>\r\n      {/*<Cell>{data.id}</Cell>*/}\r\n      {/*<Cell>{data.parentId}</Cell>*/}\r\n      <Cell><strong>{data.name}</strong> <span style={{color: 'black', fontSize: 16}}>{fingerElem}</span></Cell>\r\n      <Cell>{data.isActive.toString()}</Cell>\r\n      <Cell>{data.balance}</Cell>\r\n      <Cell>{data.email}</Cell>\r\n  </RowWrapper>\r\n  <ChildrenWrapper hidden={!showChildren}>{childrenRows}</ChildrenWrapper>\r\n  </>\r\n );\r\n};\r\n\r\nconst Cell = styled.td`\r\n//text-align: center;\r\n`\r\n\r\nconst ChildrenWrapper = styled.div`\r\ntd, td {\r\nbackground-color: rgba(88,88,88, 0.22);\r\n}\r\n\r\n`\r\n\r\nexport default Row;","import React, {useState} from 'react';\r\nimport data from './../../default.json'\r\nimport Row from \"./Row/Row\";\r\nimport {useSortData} from \"../../hooks/useSortData\";\r\nimport styled from \"styled-components\";\r\nimport {useChildrenSort} from \"../../hooks/useChildrenSort\";\r\n\r\nconst tableData:DataInterface[] = JSON.parse(JSON.stringify(data));\r\n\r\nexport type OrderType = \"ascending\" | \"descending\";\r\n\r\nexport interface ConfigInterface {\r\n  key: SortKeysType\r\n  order?: OrderType\r\n}\r\n\r\n\r\nconst Table: React.FC = () => {\r\n\r\n\r\n  // const [sortConfig, setSortConfig] = useState<ConfigInterface | null>(null);\r\n\r\n  const preSortedData: DataInterfaceWithChildren[] = useChildrenSort(tableData);\r\n\r\n\r\n\r\n  const {items, setSort} = useSortData(preSortedData);\r\n\r\n  const headersArray = [\"name\", \"isActive\", \"balance\", \"email\"] as SortKeysType[];\r\n  const headers = headersArray\r\n    .map((header:SortKeysType) => <Header onClick={() => setSort(header)}>{header}</Header>);\r\n\r\n\r\n  const rows = items.map((data) => <Row key={data.id} data={data}/>);\r\n\r\n  return (\r\n    <TableWrapper>\r\n\r\n      <thead>\r\n        <RowWrapper>\r\n          {headers}\r\n        </RowWrapper>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {rows}\r\n      </tbody>\r\n\r\n    </TableWrapper>\r\n  );\r\n};\r\n\r\nexport interface DataInterface {\r\n  id: number\r\n  parentId: number\r\n  isActive: boolean\r\n  balance: string\r\n  name: string\r\n  email: string\r\n}\r\n\r\nexport interface DataInterfaceWithChildren extends DataInterface {\r\n  childElements?: DataInterface[]\r\n}\r\n\r\nexport type SortKeysType = keyof DataInterface;\r\n\r\nexport const RowWrapper = styled.tr`\r\ndisplay: grid;\r\ngrid-template-columns: minmax(100px, 3fr) minmax(100px, 2fr) minmax(100px, 2fr) minmax(150px, 5fr);\r\n`\r\nconst Header = styled.th`\r\ncursor: pointer;\r\nbackground-color: rgba(0, 0, 0, 0.08)\r\n`\r\n\r\nconst TableWrapper = styled.table`\r\n\r\nwidth: 1000px;\r\npadding: 40px 120px;\r\ntable-layout: fixed;\r\nmargin: 0 auto;\r\n\r\nth, td {\r\n  padding: 0.25rem;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ccc;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\ntbody tr:nth-child(odd) {\r\n  background: #fff;\r\n}\r\n\r\n//display: flex;\r\n//flex-direction: column;\r\n//justify-content:center;\r\n//align-content: center;\r\n`\r\n\r\n\r\n\r\nexport default Table;","import {\r\n    ConfigInterface,\r\n    DataInterface,\r\n    DataInterfaceWithChildren,\r\n    OrderType,\r\n    SortKeysType\r\n} from \"../components/Table/Table\";\r\nimport React, {useCallback, useEffect, useMemo, useState} from \"react\";\r\n\r\ninterface UseSortInterface {\r\n    items: DataInterfaceWithChildren[]\r\n    setSort: (key: SortKeysType) => void\r\n}\r\n// export const useSortData = (tableData: DataInterface[], sortConfig: ConfigInterface | null, setSortConfig: any): DataInterface[] => {\r\nexport const useSortData = (tableData: DataInterfaceWithChildren[], config: ConfigInterface | null = null): UseSortInterface => {\r\n    // const [config, setConfig] = useState<SortKeysType | null>(null);\r\n    //\r\n    // useEffect(() => {\r\n    //     if (!sortConfig) return;\r\n    //     setConfig(key);\r\n    //     setSortConfig((prevConfig: ConfigInterface) => {\r\n    //         if (prevConfig.order === 'ascending') return ({key, order: \"ascending\"})\r\n    //         return ({key, order: \"descending\"})\r\n    //     })\r\n    // }, [sortConfig])\r\n    //\r\n    // if (!sortConfig) return tableData;\r\n    //\r\n    // const {key, order} = sortConfig;\r\n    // // if (!order)\r\n    // const tableDataCopy = [...tableData];\r\n    // const sortFunction = (a:DataInterface, b:DataInterface) => {\r\n    //     if (!sortConfig) return 0\r\n    //     if (config === key) return a[key] < b[key] ? 1 : -1\r\n    //     return a[key] > b[key] ? 1 : -1\r\n    // }\r\n    // const sortedTableData = tableDataCopy.sort(sortFunction)\r\n\r\n    const [sortConfig, setSortConfig] = useState(config);\r\n\r\n    const sortItems = useCallback((a:DataInterface, b:DataInterface) => {\r\n        if (sortConfig !== null) {\r\n            if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                return sortConfig.order === \"ascending\" ? 1 : -1\r\n            }\r\n            if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                return sortConfig.order === \"ascending\" ? -1 : 1\r\n            }\r\n        }\r\n        return 0\r\n    }, [sortConfig]);\r\n\r\n\r\n    const sortedTableData = useMemo(() => {\r\n        const tableDataCopy = [...tableData];\r\n        const sortedTableData = tableDataCopy.sort(sortItems);\r\n        return sortedTableData\r\n    }, [tableData, sortItems]);\r\n\r\n    const setSort = (key: SortKeysType) => {\r\n        let order: OrderType  = \"ascending\";\r\n        if (sortConfig?.key === key && sortConfig.order === \"ascending\") {\r\n            order = \"descending\"\r\n        }\r\n        setSortConfig({key, order})\r\n    }\r\n\r\n\r\n    return {items: sortedTableData, setSort}\r\n}","import {DataInterface, DataInterfaceWithChildren} from \"../components/Table/Table\";\r\nimport {useMemo} from \"react\";\r\n\r\nexport const useChildrenSort = (tableData: DataInterface[]): DataInterfaceWithChildren[] => {\r\n  const parentElements = tableData.filter((dataElement) => dataElement.parentId === 0);\r\n  // const parentsWithChildren = useMemo(() => {\r\n  const parentsWithChildren = useMemo(() => {\r\n    const parents = parentElements.map(\r\n      (parentElem) => {\r\n        const childrenElements = tableData.filter((childElem) => childElem.parentId === parentElem.id);\r\n        return { ...parentElem, childElements: childrenElements}\r\n      }\r\n    );\r\n    return parents\r\n  }\r\n, []);\r\n\r\n  return parentsWithChildren\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport Table from \"./components/Table/Table\";\n\nfunction App() {\n  return (\n    <div>\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}